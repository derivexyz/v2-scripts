/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Build a signable transaction params dictionary.
 */
export type PublicBuildRegisterSessionKeyTx = PublicBuildRegisterSessionKeyTxJSONRPCSchema;
export type Method = 'public/build_register_session_key_tx';
/**
 * Expiry of the session key
 */
export type ExpirySec = number;
/**
 * Gas allowance for transaction. If none, will use estimateGas * 150%
 */
export type Gas = number | null;
/**
 * Wallet's transaction count, If none, will use eth.getTransactionCount()
 */
export type Nonce = number | null;
/**
 * Session key in the form of an Ethereum EOA
 */
export type PublicSessionKey = string;
/**
 * Ethereum wallet address of account
 */
export type Wallet = string;

export interface PublicBuildRegisterSessionKeyTxJSONRPCSchema {
  request: PublicBuildRegisterSessionKeyTxRequestSchema;
  response: PublicBuildRegisterSessionKeyTxResponseSchema;
}
export interface PublicBuildRegisterSessionKeyTxRequestSchema {
  id?: string | number;
  method: Method;
  params: PublicBuildRegisterSessionKeyTxParamsSchema;
}
export interface PublicBuildRegisterSessionKeyTxParamsSchema {
  expiry_sec: ExpirySec;
  gas: Gas;
  nonce: Nonce;
  public_session_key: PublicSessionKey;
  wallet: Wallet;
}
export interface PublicBuildRegisterSessionKeyTxResponseSchema {
  id: string | number;
  result: PublicBuildRegisterSessionKeyTxResultSchema;
}
export interface PublicBuildRegisterSessionKeyTxResultSchema {
  tx_params: TxParams;
}
/**
 * Transaction params in dictionary form, same as `TxParams` in `web3.py`
 */
export interface TxParams {
  [k: string]: any;
}
