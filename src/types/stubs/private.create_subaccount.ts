/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Create a new subaccount under a given wallet, and deposit an asset into that subaccount.
 */
export type PrivateCreateSubaccount = PrivateCreateSubaccountJSONRPCSchema;
export type Method = 'private/create_subaccount';
/**
 * Amount of the asset to deposit
 */
export type Amount = string;
/**
 * Name of asset to deposit
 */
export type AssetName = string;
/**
 * Base currency of the subaccount (only for `PM`)
 */
export type Currency = string | null;
/**
 * `PM` (Portfolio Margin) or `SM` (Standard Margin)
 */
export type MarginType = 'PM' | 'SM';
/**
 * Unique nonce defined as <UTC_timestamp in ms><random_number_up_to_6_digits> (e.g. 1695836058725001, where 001 is the random number)
 */
export type Nonce = number;
/**
 * Ethereum signature of the deposit
 */
export type Signature = string;
/**
 * Unix timestamp in seconds. Expiry MUST be >5min from now
 */
export type SignatureExpirySec = number;
/**
 * Ethereum wallet address that is signing the deposit
 */
export type Signer = string;
/**
 * Ethereum wallet address
 */
export type Wallet = string;
/**
 * `requested`
 */
export type Status = string;
/**
 * Transaction id of the request
 */
export type TransactionId = string;

export interface PrivateCreateSubaccountJSONRPCSchema {
  request: PrivateCreateSubaccountRequestSchema;
  response: PrivateCreateSubaccountResponseSchema;
}
export interface PrivateCreateSubaccountRequestSchema {
  id?: string | number;
  method: Method;
  params: PrivateCreateSubaccountParamsSchema;
}
export interface PrivateCreateSubaccountParamsSchema {
  amount: Amount;
  asset_name: AssetName;
  currency?: Currency;
  margin_type: MarginType;
  nonce: Nonce;
  signature: Signature;
  signature_expiry_sec: SignatureExpirySec;
  signer: Signer;
  wallet: Wallet;
}
export interface PrivateCreateSubaccountResponseSchema {
  id: string | number;
  result: PrivateCreateSubaccountResultSchema;
}
export interface PrivateCreateSubaccountResultSchema {
  status: Status;
  transaction_id: TransactionId;
}
