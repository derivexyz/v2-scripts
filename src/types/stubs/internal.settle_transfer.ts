/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Used for settling transfers to the blockchain by submitting them to the sequencer RPC.
 */
export type InternalSettleTransfer = InternalSettleTransferJSONRPCSchema;
export type Method = "internal/settle_transfer";
export type IsRecipientTransfer = boolean;
export type ManagerForNewAccount = string;
export type ToAccountId = number;
/**
 * Ethereum address of the asset being transferred
 */
export type Address = string;
/**
 * Amount to transfer
 */
export type Amount = string;
/**
 * Sub ID of the asset being transferred
 */
export type SubId = number;
export type Transfers = TransferDetailsSchema[];
export type Expiry = number;
export type Module = string;
export type Nonce = number;
export type Owner = string;
export type Signature = string;
export type Signer = string;
export type SubaccountId = number;
export type IsNewAccount = boolean;
export type Status = 0 | 1 | 2;
export type TransactionHash = string | null;

export interface InternalSettleTransferJSONRPCSchema {
  request: InternalSettleTransferRequestSchema;
  response: InternalSettleTransferResponseSchema;
}
export interface InternalSettleTransferRequestSchema {
  id?: string | number;
  method: Method;
  params: InternalSettleTransferParamsSchema;
}
export interface InternalSettleTransferParamsSchema {
  from_order: SignedTransferOrderSchema;
  is_new_account: IsNewAccount;
  to_order: SignedTransferOrderSchema1;
}
export interface SignedTransferOrderSchema {
  data: TransferModuleDataSchema;
  expiry: Expiry;
  module: Module;
  nonce: Nonce;
  owner: Owner;
  signature: Signature;
  signer: Signer;
  subaccount_id: SubaccountId;
}
export interface TransferModuleDataSchema {
  is_recipient_transfer: IsRecipientTransfer;
  manager_for_new_account: ManagerForNewAccount;
  to_account_id: ToAccountId;
  transfers: Transfers;
}
export interface TransferDetailsSchema {
  address: Address;
  amount: Amount;
  sub_id: SubId;
}
export interface SignedTransferOrderSchema1 {
  data: TransferModuleDataSchema;
  expiry: Expiry;
  module: Module;
  nonce: Nonce;
  owner: Owner;
  signature: Signature;
  signer: Signer;
  subaccount_id: SubaccountId;
}
export interface InternalSettleTransferResponseSchema {
  id: string | number;
  result: InternalSettleTransferResultSchema;
}
export interface InternalSettleTransferResultSchema {
  status: Status;
  transaction_hash: TransactionHash;
}
