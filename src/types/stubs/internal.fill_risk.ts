/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Used by the engine in evaluating a fill of multiple orders at once.
 * Since orders are batched when sent to the contracts, the risk worker
 * must ensure that the cumulative updates to the balances are
 * going to be accepted by the base layer. Individual orders involved
 * in a fill are attached as data to the requests.
 */
export type InternalFillRisk = InternalFillRiskJSONRPCSchema;
export type Method = 'internal/fill_risk';
export type InstrumentName = string;
export type PortfolioDelta = string;
export type SubaccountId = number;
export type BalanceNonce = number;
export type Code = number;
export type Data = string | null;
export type Message = string;
export type IsValid = boolean;
export type SubaccountId1 = number;
export type UpdateHash = string;
export type ValuationTimestamp = number;

export interface InternalFillRiskJSONRPCSchema {
  request: InternalFillRiskRequestSchema;
  response: InternalFillRiskResponseSchema;
}
export interface InternalFillRiskRequestSchema {
  id?: string | number;
  method: Method;
  params: InternalFillRiskParamsSchema;
}
export interface InternalFillRiskParamsSchema {
  instrument_name: InstrumentName;
  portfolio_delta: PortfolioDelta;
  subaccount_id: SubaccountId;
}
export interface InternalFillRiskResponseSchema {
  id: string | number;
  result: InternalFillRiskResultSchema;
}
export interface InternalFillRiskResultSchema {
  balance_nonce: BalanceNonce;
  caught_error?: RPCErrorFormatSchema;
  is_valid: IsValid;
  subaccount_id: SubaccountId1;
  update_hash: UpdateHash;
  valuation_timestamp: ValuationTimestamp;
}
/**
 * Error if `is_valid` is `False`
 */
export interface RPCErrorFormatSchema {
  code: Code;
  data?: Data;
  message: Message;
}
